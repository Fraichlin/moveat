security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            form_login:
                login_path: app_login
            logout:
                path: app_logout
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /
            guard:
                authenticators:
                    - App\Security\UserLoginAuthenticator
#        api:
#            pattern: ^/Api/
#            stateless: true
#            anonymous: true
#            provider: app_user_provider
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator
#            main:
#                anonymous: lazy
#                provider: app_user_provider



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/Admin, roles: ROLE_ADMIN }
         - { path: ^/Coach, roles: ROLE_COACH }
         - { path: ^/Member, roles: ROLE_MEMBER }
#         - { path: ^/Api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/Api/member, roles: IS_AUTHENTICATED_FULLY }
#         - { path: ^/Api/coach, roles: IS_AUTHENTICATED_FULLY }
