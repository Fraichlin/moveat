security:
    encoders:
        App\Entity\Coach:
            algorithm: bcrypt
        App\Entity\Membre:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        coach_user:
            entity:
                class: App\Entity\Coach
                property: email
        member_user:
            entity:
                class: App\Entity\Membre
                property: email
        all_users:
            chain:
                providers: ['coach_user', 'member_user']
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        coach_domain:
            anonymous: lazy
            pattern: ^/Coach
            provider: coach_user
            form_login:
                login_path: loginCoach
                check_path: loginCoach
                default_target_path: homeCoach
            logout:
                path: logoutCoach
                target: home

        user_domain:
            anonymous: lazy
            pattern: ^/Member
            provider: member_user
            form_login:
                login_path: loginMember
                check_path: loginMember
                default_target_path: homeMember
            logout:
                path: logoutCoach
                target: home
        main:
            anonymous: lazy



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#         - { path: ^/Admin, roles: ROLE_ADMIN }
#         - { path: ^/Coach, roles: ROLE_USER }
